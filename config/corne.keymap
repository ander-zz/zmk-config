// ZMK includes
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <locale/keys_de.h>
#include <dt-bindings/zmk/outputs.h>

// Personal includes
#include "includes/custom_keycodes.dtsi"
#include "includes/settings.dtsi"
//#include "includes/settings_pd.dtsi"
#include "includes/conditional_layers.dtsi"
#include "includes/macros.dtsi"
#include "includes/combos.dtsi"
#include "includes/behaviours_homerow_mods.dtsi"
#include "includes/behaviours_mod_morph.dtsi"
#include "includes/behaviours_other.dtsi"

#define HM_TAPPING_TERM 300
#define HM_TAPPING_TERM_FAST 200
#define HM_PRIOR_IDLE 150


/ {

    behaviors {

        // Positional Homerow mods
        // Homerow mods that prevent accidental activations when rolling keys,
        // such as when typing `st` or `ne` on colemak-dh layouts or `as` on
        // qwerty.
        //
        // Works by only allowing a mod to activate within tapping-term if
        // it's on the opposite side of the keyboard or on the same side thumb
        // keys.

        // Further optimization using urob's timerless homerow mods method:
        // https://github.com/urob/zmk-config#timeless-homerow-mods
        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>,  <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            hold-trigger-on-release;
        };

        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            hold-trigger-key-positions = <KEYS_L KEYS_T>;
            hold-trigger-on-release;
        };


        // Positional Homerow mods for shift
        // Use faster tapping term and disable some features that may
        // cause false negatives.
        hm_shift_l: hm_shift_l {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            // hold-trigger-on-release;
        };

        hm_shift_r: hm_shift_r {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            hold-trigger-key-positions = <KEYS_L KEYS_T>;
            // hold-trigger-on-release;
        };

        /*
         * Non-Positional Homerow Mods
         * Used for &mm_grescm_gui behavior on left hand.
         *
         * Usage: &hm LSHFT T
         * Tap: T
         * Tap-Tap-Hold: Repeat T
         * Hold: LSHIFT
         */
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <200>;
        };

    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        colemak { 
            bindings = <
// ╭────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────┬────────────────────────╮    ╭────────────────────────┬────────────────────────┬────────────────────────┬───────────────────────┬────────────────────────┬────────────────────────╮
     &kp ESCAPE               &kp Q                    &kp W                    &kp F                    &kp P                    &kp B                         &kp J                    &kp L                    &mt DE_U_UMLAUT U        &kp DE_Y                &none                    &kp BSPC
// ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤    ├────────────────────────┼────────────────────────┼────────────────────────┼───────────────────────┼────────────────────────┼────────────────────────┤
     &kp TAB                  &hm_l LGUI A             &hm_l LALT R             &hm_shift_l LSHFT S      &hm_l LCTRL T            &kp G                         &kp M                    &hm_r RCTRL N            &hm_shift_r RSHFT E      &hm_r RALT I            &hm_r RGUI O             &kp ENTER
// ├────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┼────────────────────────┤    ├────────────────────────┼────────────────────────┼────────────────────────┼───────────────────────┼────────────────────────┼────────────────────────┤
     &kp LSHFT                &kp DE_Z                 &kp X                    &kp C                    &kp D                    &kp V                         &kp K                    &kp H                    &kp COMMA                &kp DOT                 &kp DE_QMARK             &kp DE_DQT
// ╰────────────────────────┴────────────────────────┴────────────────────────┴────────────────────────┼────────────────────────┼────────────────────────┤    ├────────────────────────┼────────────────────────┼────────────────────────┼───────────────────────┼────────────────────────┼────────────────────────╯ 
                                                                                &kp LEFT_CONTROL         &mo 1                    &kp SPACE                     &kp RET                  &mo 2                    &kp RALT
//                                                                            ╰────────────────────────┴────────────────────────┴────────────────────────╯    ╰────────────────────────┴────────────────────────┴────────────────────────╯
            >; 
        };

        numbers {
            bindings = <
             &kp BSPC      &none         &none           &kp UP_ARROW  &none          &none             &none        &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &none  &kp BSPC
             &kp TAB       &kp LC(A)     &kp LEFT_ARROW  &kp DOWN      &kp RIGHT     &none             &none         &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_NUMBER_0  &trans 
             &kp LSHFT     &kp LC(Z)     &kp LC(X)       &kp LC(C)     &kp LC(V)     &trans            &trans        &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans &trans
                                                         &kp LGUI      &trans        &kp SPACE         &kp RET       &trans        &kp RALT
            >;
        };

        symbols {
            bindings = <
            &kp TAB    &kp DE_EXCL  &kp DE_AT       &kp UP_ARROW    &kp DLLR    &kp DE_PRCNT    &kp DE_CARET  &kp DE_AMPS    &kp DE_ASTRK  &kp DE_LPAR  &kp DE_RPAR  &kp BSPC
            &kp LCTRL  &trans       &kp LEFT_ARROW  &kp DOWN        &kp RIGHT   &trans          &kp DE_POUND  &kp DE_MINUS   &kp DE_EQUAL  &kp DE_LBKT  &kp DE_RBKT  &kp GRAVE
            &kp LSHFT  &trans       &trans          &trans          &trans      &trans          &kp UNDER     &kp DE_PLUS    &mt DE_BSLH DE_FSLH      &kp DE_LBRC  &kp DE_RBRC  &kp TILDE
                                        &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        umlaute {
            bindings = <
            &trans  &trans  &trans  &trans  &trans  &trans     &trans  &trans  &trans  &kp DE_U_UMLAUT  &trans  &trans
            &trans  &kp DE_A_UMLAUT &trans  &kp DE_SZ   &trans  &trans     &trans  &trans  &trans  &trans  &kp DE_O_UMLAUT  &trans
            &trans  &trans  &trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans  &trans  &trans     &trans  &trans  &trans
            >;
        };

    };
};
